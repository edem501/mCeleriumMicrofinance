@using PagedList.Mvc;
@using iCelerium.Models.BodyClasses;
@model PagedList.IPagedList<TransactionsViewModel>
@{
    if (Model.Count() > 0)
    {
        ViewBag.Title = String.Format("{0}({1})", "Liste Des Epargnes", ViewBag.AgentID);
    }
    else
    {
        ViewBag.Title = String.Format("{0}", iCelerium.Views.Strings.TransList);
    }
}



<link href="~/Content/themes/base/jquery.ui.all.css" rel="stylesheet" />
<link href="~/Content/Site.css" rel="stylesheet" />
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery-ui-1.10.4.min.js"></script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.10.4.min.js"></script>
}


<h3><i class="fa fa-tasks"></i>@ViewBag.Title</h3>

<hr>
<div class="row">
    @using (Html.BeginForm("Collettes", "Credits", new { AgentID = ViewBag.AgentID }, FormMethod.Post))
    {

        <div class="col-md-3">

            <div class="form-group">
                <div class="input-group ">
                    <span class="input-group-addon "><i class="fa fa-calendar bigger-110"></i></span>
                    @Html.TextBox("startDate", null, new { @class = "form-control date-picker Date" })

                </div>
            </div>

        </div>
        <div class="col-md-3">

            <div class="form-group">
                <div class="input-group ">
                    <span class="input-group-addon "><i class="fa fa-calendar bigger-110"></i></span>
                    @Html.TextBox("endDate", null, new { @class = "form-control date-picker Date2" })

                </div>
            </div>

        </div>
        <div class="col-md-4">
            <div class="form-group">

                <div class="input-group ">
                    <span class="input-group-addon"><i class="fa fa-user bigger-110"></i></span>
                    @Html.DropDownList("agentModel", null, @iCelerium.Views.Strings.Agents, new { @class = "form-control dropdown" })

                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <input type="submit" value="Go" class="btn btn-success" />
            </div>
        </div>
    }
</div>


<div class="row">
    <div class="panel panel-info">


        <table class="table table-striped table-condensed">
            <thead style=" font-weight:bold" class="alert-info">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Date)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Nom_Commercial)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Nom_Client)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Solde_Ouverture)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Debit)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Credit)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Solde_Fermeture)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Count() > 0)
                {
                    foreach (var item in Model)
                    {

                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Date)
                            </td>
                            <td style="text-transform:uppercase">
                                @Html.DisplayFor(modelItem => item.Nom_Commercial)
                            </td>
                            <td style="text-transform:uppercase">
                                @Html.DisplayFor(modelItem => item.Nom_Client)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Solde_Ouverture)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Debit)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Credit)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Solde_Fermeture)
                            </td>
                            <td>
                                @*@Html.ActionLink("Edit", "Edit", new { id=item.id }) |
                                    @Html.ActionLink("Details", "Details", new { id=item.id }) |
                                    @Html.ActionLink("Delete", "Delete", new { id=item.id })*@

                                @*<a href='@Url.Action("Details", "Transactions", new { id = item.id })'> <i class="fa fa-info-circle fa-fw fa-2x"></i></a>*@
                            </td>
                        </tr>
                    }
                }

            </tbody>
            <tfoot>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>Montant Des Epargnes</td>
                    <td style="color:green">@ViewBag.sumC</td>
                    <td></td>

                </tr>

            </tfoot>


        </table>


    </div>
    <div style="text-align:right;">
        @*Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount*@

        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchDate = ViewBag.VBsearchDate, agentModel = ViewBag.VBagentModel }), new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true })
    </div>
</div>


